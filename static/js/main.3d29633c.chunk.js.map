{"version":3,"sources":["components/TopicListContainer.tsx","utils.ts","consts.ts","components/base/BaseDialog.tsx","components/AboutDialog.tsx","App.tsx","index.tsx"],"names":["TopicListContainer","props","this","dateStr","date","topics","className","length","map","t","idx","href","url","title","id","React","Component","formatDate","timestamp","tempData","Date","year","getFullYear","month","getMonth","getDate","getCurrentTimeStamp","now","getTimezoneOffset","getTime","BaseDialog","class","children","AboutDialog","tempContainerEl","document","createElement","body","classList","add","ReactDOM","render","appendChild","remove","onClick","close","bind","App","state","isFetching","dailyTopics","failedFetching","beginingTimestamp","currentTimestamp","utils","formatDateString","rawDataFilePath","fetch","res","json","setState","concat","console","error","showAboutDialog","d","refreshPage","setTimeout","componentDidMount","show","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d29633c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/topic-list-container.css\";\r\nimport { Topic } from \"../types\";\r\n\r\ntype Props = {\r\n  date: string;\r\n  topics: Topic[];\r\n};\r\n\r\nexport default class TopicListContainer extends React.Component {\r\n  public props: Props;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.props = props;\r\n  }\r\n\r\n  public render() {\r\n    const { date: dateStr, topics } = this.props;\r\n\r\n    return (\r\n      <div className=\"topics-container\">\r\n        <p className=\"date-text\">{dateStr}</p>\r\n        {topics.length === 0 ? (\r\n          <p className=\"null-text\">空空如也</p>\r\n        ) : (\r\n          topics.map((t, idx) => (\r\n            // NOTE: define topic item element in here\r\n            <div className=\"topic-container\" key={t.id}>\r\n              <span className=\"index-text\">{idx + 1}.</span>\r\n              <a className=\"link-text\" href={t.url}>\r\n                {t.title}\r\n              </a>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * 根据时间戳返回特殊格式化后的字符串，例如 2020-12-21\r\n * @param timestamp 时间戳，单位毫秒\r\n */\r\nexport function formatDate(timestamp: number): string {\r\n  const tempData = new Date(timestamp);\r\n\r\n  const year = tempData.getFullYear();\r\n  let month: number | string = tempData.getMonth() + 1;\r\n  let date: number | string = tempData.getDate();\r\n\r\n  if (month < 10) {\r\n    month = \"0\" + month;\r\n  }\r\n  if (date < 10) {\r\n    date = \"0\" + date;\r\n  }\r\n\r\n  return `${year}-${month}-${date}`;\r\n}\r\n\r\n/** 返回此时时间戳，以毫秒为单位 */\r\nexport function getCurrentTimeStamp(): number {\r\n  const currentDate = new Date(Date.now() + getTimezoneMsOffset());\r\n\r\n  return currentDate.getTime();\r\n}\r\n\r\n/** 返回时区差值，以毫秒为单位 */\r\nexport function getTimezoneMsOffset(): number {\r\n  return new Date().getTimezoneOffset() * 60 * 1000;\r\n}\r\n","/** 数据文件url前缀 */\r\nexport const RAW_JSON_BASE_URL = \"https://boojack.github.io/v2ex-daily-hot-topic/raw/\";\r\n\r\n/** 数据爬虫开始日期: \"2020/12/18\" */\r\nexport const SCRIPT_BEGIN_TIMESTAMP: number = 1608220800000;\r\n\r\n/** 一天的毫秒数 */\r\nexport const DAY_MILLISECONDS_COUNT: number = 24 * 60 * 60 * 1000;\r\n","import React from \"react\";\r\nimport \"../../css/base/base-dialog.css\";\r\n\r\ntype Props = {\r\n  // css class names\r\n  class: string;\r\n  // slot elements\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport default class BaseDialog extends React.Component {\r\n  public props: Props;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"dialog-main-wrapper\">\r\n        <div className={\"dialog-main-container \" + this.props.class}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport BaseDialog from \"./base/BaseDialog\";\r\nimport \"../css/about-dialog.css\";\r\n\r\nexport default class AboutDialog extends React.Component {\r\n  private tempContainerEl: HTMLDivElement;\r\n\r\n  constructor(props = {}) {\r\n    super(props);\r\n\r\n    this.tempContainerEl = document.createElement(\"div\");\r\n  }\r\n\r\n  public show() {\r\n    // FIXME: 还没考虑如果存在多个 Dialog。\r\n    document.body.classList.add(\"dialog-present-no-scroll\");\r\n    ReactDOM.render(this.render(), document.body.appendChild(this.tempContainerEl));\r\n  }\r\n\r\n  public close() {\r\n    this.tempContainerEl.remove();\r\n    document.body.classList.remove(\"dialog-present-no-scroll\");\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <BaseDialog class=\"about-dialog-container\">\r\n        <div className=\"header-container\">\r\n          <p className=\"title-text\">About</p>\r\n          <span className=\"btn close-btn\" onClick={this.close.bind(this)}>\r\n            Close\r\n          </span>\r\n        </div>\r\n        <div className=\"content-container\">\r\n          <p>V2EX 热议话题榜，展示从 2020-12-18 日开始的 V2EX 热议话题榜单。</p>\r\n          <p>\r\n            源码地址：\r\n            <a href=\"https://github.com/boojack/v2ex-daily-hot-topic-web\">GitHub</a>\r\n          </p>\r\n        </div>\r\n        <div className=\"footer-container\">{/* TODO */}</div>\r\n      </BaseDialog>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./css/app.css\";\nimport TopicListContainer from \"./components/TopicListContainer\";\nimport * as utils from \"./utils\";\nimport { Topic } from \"./types\";\nimport { RAW_JSON_BASE_URL, SCRIPT_BEGIN_TIMESTAMP, DAY_MILLISECONDS_COUNT } from \"./consts\";\nimport AboutDialog from \"./components/AboutDialog\";\n\ntype State = {\n  isFetching: boolean;\n  dailyTopics: {\n    date: string;\n    topics: Topic[];\n  }[];\n  failedFetching: boolean;\n};\n\nclass App extends React.Component {\n  public state: State;\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n      dailyTopics: [],\n      failedFetching: false,\n    };\n  }\n\n  async componentDidMount() {\n    const beginingTimestamp = SCRIPT_BEGIN_TIMESTAMP;\n    let currentTimestamp = utils.getCurrentTimeStamp();\n\n    while (currentTimestamp > beginingTimestamp) {\n      const formatDateString = utils.formatDate(currentTimestamp);\n      const rawDataFilePath = RAW_JSON_BASE_URL + formatDateString + \".json\";\n\n      try {\n        const res = await fetch(rawDataFilePath);\n        const dailyTopics = {\n          date: formatDateString,\n          topics: await res.json(),\n        };\n\n        this.setState({\n          dailyTopics: this.state.dailyTopics.concat(dailyTopics),\n        });\n      } catch (error) {\n        this.setState({\n          failedFetching: true,\n        });\n        console.error(error);\n        break;\n      }\n\n      currentTimestamp -= DAY_MILLISECONDS_COUNT;\n    }\n\n    this.setState({\n      isFetching: false,\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"page-container\">\n        <header className=\"header-container\">\n          <p className=\"header-text\">V2EX 每日热门话题</p>\n          <span className=\"about-btn\" onClick={this.showAboutDialog.bind(this)}>\n            About\n          </span>\n        </header>\n        {/* 每日话题列表 */}\n        {this.state.dailyTopics.map((d) => (\n          <TopicListContainer key={d.date} topics={d.topics} date={d.date}></TopicListContainer>\n        ))}\n        {/* fetching status text */}\n        {this.state.isFetching && <p>获取数据中...</p>}\n        {/* fetch failed result text */}\n        {this.state.failedFetching && (\n          <p>\n            获取数据失败，\n            <span className=\"error-text\" onClick={this.refreshPage.bind(this)}>\n              尝试刷新一下吧\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  private refreshPage() {\n    this.setState({\n      isFetching: true,\n      dailyTopics: [],\n      failedFetching: false,\n    });\n\n    setTimeout(() => {\n      this.componentDidMount();\n    }, 2000);\n  }\n\n  private showAboutDialog() {\n    const aboutDialog = new AboutDialog();\n    aboutDialog.show();\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}